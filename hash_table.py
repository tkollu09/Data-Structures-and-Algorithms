# -*- coding: utf-8 -*-
"""Hash_Table.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1W_FylCAYxBfC8aK5lhd0lh2xD3woasoU

I know python already has dictionaries but this is for me to learn

Uses chaining for collisions
"""

class HashTable:
    def __init__(self, size):
        self.size = size
        self.table = [[] for _ in range(self.size)]

    def _hash(self, key):
      return sum(ord(char) for char in key) % self.size

    def insert(self, key, value):
        index = self._hash(key)
        for i, (k, v) in enumerate(self.table[index]):
            if k == key:
                self.table[index][i] = (key, value)
                return
        self.table[index].append((key, value))

    def search(self, key):
      index = self._hash(key)
      for (k, v) in self.table[index]:
        if k == key:
          return v
      return None

    def delete(self, key):
      index = self._hash(key)
      self.table[index] = [(k, v) for (k, v) in self.table[index] if k != key]

"""Testing Hash Table"""

ht=HashTable(5)
ht.insert("apples", 15)
ht.insert("bananas", 12)
ht.insert("grapes", 33)
print(ht.search("apples"))
print(ht.search("bananas"))
print(ht.search("grapes"))
print(ht.search("oranges"))
ht.insert("apples", 10)
print(ht.search("apples"))
ht.delete("bananas")
print(ht.search("bananas"))
ht.insert("elppas",99)
print(ht.table)